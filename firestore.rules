
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow public read access for general anime data (adjust collection name if different)
    // For example, if you have an 'animes' collection storing anime details:
    // match /animes/{animeId} {
    //   allow read: if true;
    //   // Write access to animes should typically be restricted to admins/backend functions
    //   allow write: if false; // Or implement admin-only rules
    // }

    // Secure user-specific data
    match /users/{userId} {
      // Allow a user to read and write their own document (if you store user profile info here)
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Secure favorites subcollection
      match /favorites/{animeId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        // Add validation for create/update if needed, e.g., ensure specific fields exist
        // allow create: if request.auth != null && request.auth.uid == userId
        //                  && request.resource.data.animeId == animeId
        //                  && request.resource.data.addedAt == request.time;
      }

      // Secure wishlist subcollection
      match /wishlist/{animeId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        // Add validation for create/update if needed
        // allow create: if request.auth != null && request.auth.uid == userId
        //                  && request.resource.data.animeId == animeId
        //                  && request.resource.data.addedAt == request.time;
      }

      // Deny access to other subcollections under /users/{userId} unless explicitly defined
      match /{allOtherDocs=**} {
        allow read, write: if false;
      }
    }

    // By default, disallow access to other collections unless explicitly defined above or below.
    // If you have other collections, add rules for them.
    // For example, if you have a general 'site_config' collection:
    // match /site_config/{configId} {
    //   allow read: if true;
    //   allow write: if false; // Admin only
    // }

    // Catch-all for any other paths not explicitly matched.
    // This makes the rules more secure by defaulting to no access.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
